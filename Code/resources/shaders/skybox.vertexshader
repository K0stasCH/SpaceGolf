#version 330 core
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 2) in vec2 vertexUV;

//out vec3 texCoords;
out vec2 uv;
out vec3 texCoords;

uniform mat4 projection;
uniform mat4 view;

void main()
{
    vec4 pos = projection * view * vec4(vertexPosition_modelspace, 0.0f);
    // Having z equal w will always result in a depth of 1.0f
    gl_Position = pos.xyww;
    // We want to flip the z axis due to the different coordinate systems (left hand vs right hand)
    //texCoords = vec3(vertexPosition.x, vertexPosition.y, -vertexPosition.z);
    uv = vertexUV;

    //texCoords = vec3(vertexPosition_modelspace.x, vertexPosition_modelspace.y, -vertexPosition_modelspace.z);
}    